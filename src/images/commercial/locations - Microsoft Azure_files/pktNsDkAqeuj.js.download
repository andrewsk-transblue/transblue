define("MsPortalImpl/UI/UI.BladeOpenerImpl",["require","exports","Fx/DependencyInjection","Fx/Composition/Selectable","FxInternal/AsyncLoader","MsPortalImpl/Base/Base.Selectable2","MsPortalImpl/Extension/Extension.Definition.Locator","MsPortalImpl/UI/UI.HelpPaneState","MsPortalImpl/UI/UI.JourneyManager","MsPortalImpl/UI/Compositions/UI.Composition.BladeOpener","MsPortalImpl/UI/Compositions/UI.Composition.BladeOpenerBase"],(function(e,t,a,n,s,o,r,l,i,d,c){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BladeOpener=void 0;let p=class{constructor(e,t){this._diContainer=e,this._helpPaneState=t}async openBlade(e,t={}){const{selectable:a,container:n,flags:s,selectedItem:o,telemetryName:r,context:l}=t,i=t.timestamp||Date.now(),d=MsPortalFx.getUniqueId();Q.isPromiseAlike(e)&&(this.requestOpenBlade(a,n,{timestamp:i,bladeReference:void 0,reason:4,flags:s,operationId:d,context:l}),e=await e);return(await this.requestOpenBlade(a,n,{timestamp:i,bladeReference:e,reason:3,operationId:d,flags:MsPortalFx.isNullOrUndefined(s)?2:s,selectedItem:o,telemetryName:r,context:l})).success}async requestOpenBlade(e,t,a){if(!e&&t&&(e=m(t)),(64&a.flags||128&a.flags)&&this._helpPaneState.isOpen()){const e=await this._diContainer.getAsync(s.get("MsPortalImpl/UI/UI.HelpPane","HelpPane"));await(128&a.flags)?e.minimize():e.close()}if(8&a.flags){const t=this._diContainer.get(u);e=512&a.flags?t.sidebar:32&a.flags?t.helpPane:t.selectable}else(!e||16&a.flags&&4&~a.flags)&&(e=await async function(e){const t=e.get(i.JourneyManager).activeJourney(),a=MsPortalFx.find(null==t?void 0:t.children,(e=>!!(1&~e.flags)),-1);if(a){!a.isComposed&&await a.await(7);const e=a.children[0].children[0];return m((await e.getViewModelAsync()).container)}return e.get(u).selectable}(this._diContainer));const n=(r=e,21298===(null===(l=FxImpl.shellInterface(r))||void 0===l?void 0:l.type)?(0,o.getOrCreate)(this._diContainer,e):e);var r,l;return await n.processRequest(a)}};p=__decorate([__metadata("fx:diagnostics",[e,"BladeOpener"]),a.Class(),__metadata("design:paramtypes",[a.Container,l.HelpPaneState])],p),t.BladeOpener=p;let u=class{constructor(e,t){this._diContainer=e,this._viewModel={selectable:new n.Selectable2({supplyBladeReferenceAsync:MsPortalFx.noop}),helpPane:new n.Selectable2({supplyBladeReferenceAsync:MsPortalFx.noop}),sidebar:new n.Selectable2({supplyBladeReferenceAsync:MsPortalFx.noop}),internal:{selectable:ko.observable()}};const a=e.createChildContainer("composition");a.set(c.OpenerConfiguration,{masterModel:this._viewModel,masterModelId:"UI.BladeOpener",referenceComposition:null,referenceExtension:t.locate(r.Locator.forExtension("HubsExtension")),isBladeOpenedByMaster:()=>!0,configureBladeDescriptor:MsPortalFx.noop}),this._opener=a.get(d.BladeOpener),this._createSelectable("selectable"),this._createSelectable("helpPane"),this._createSelectable("sidebar")}_createSelectable(e){this[e]=(0,o.getOrCreate)(this._diContainer,this._viewModel[e]),this._opener.registerInvocationProperty({invocationInputArguments:[{valuesFrom:[{referenceType:0,property:e}]}]})}};u=__decorate([__metadata("fx:diagnostics",[e,"SelectableContainer"]),a.Class(),__metadata("design:paramtypes",[a.Container,r.DefinitionFinder])],u);function m(e){return e._msPortalFxOpenBladeSelectable}})),
define("MsPortalImpl/UI/UI.CreateJourney",["require","exports","Fx/Composition/Selectable","MsPortalImpl/Services/Services.AssetTypes","MsPortalImpl/UI/UI.BladeOpenerImpl"],(function(e,t,a,n,s){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.createJourney=void 0;var o=MsPortalFx.Base,r=o.Diagnostics,l=r.Telemetry,i=o.Constants.BladeNames.Hubs,d=o.Constants.ExtensionNames.Hubs;const c=r.createLog(e);t.createJourney=async function(e,t,o){const r=l.startTrace({source:"Desktop",action:"JourneyOpened",name:"BladeLauncher",assetType:t.assetType});try{let p=t instanceof a.PdlBladeReference?t:void 0,u=!1;if(!p){const s=t;p=o?await async function(e,t){function s(e){const t=null==e?void 0:e.data;return(null==e?void 0:e.status)||(null==e?void 0:e.httpStatusCode)||(null==t?void 0:t.status)||(null==t?void 0:t.httpStatusCode)}try{const s=await e.get(n.AssetTypeService),o=await s.mapAssetIdToDynamicSelectionAndIcon({assetId:t.assetId,extensionName:t.extensionName,assetType:t.assetType},"AssetBladeLauncher"),r=o.selection;if(!r.detailBlade){const e=s.getAssetType(t.extensionName,t.assetType),a=MsPortalFx.Errors.getErrorOptions(`Blade name is missing for asset ${t.extensionName}:${t.assetType}`,{data:{assetSelector:t,selectionAndIcon:o,assetTypeReturned:e}});throw new MsPortalFx.Errors.Error(a)}return new a.PdlBladeReference(r.detailBlade,r.extension,{parameters:r.detailBladeInputs})}catch(e){const n=(e=e||new MsPortalFx.Errors.Error("Unknown error")).innerErrors&&e.innerErrors.first(),o=s(e)||s(n),r=e.message||n&&n.message||e;0!==o&&c.warning(r,1,e.data);let l=i.UnavailableAssetBlade;const p={id:"string"==typeof t.assetId?t.assetId:t.assetType};return 401===o||403===o?l=i.UnauthorizedAssetBlade:404===o&&(l=i.NotFoundAssetBlade),new a.PdlBladeReference(l,d,{parameters:p})}}(e,s):new FxImpl.Composition.Selectable.PdlBladeReference(t.detailBlade,s.extension,{parameters:s.detailBladeInputs,onClosed:s.onClosed}),p.context=s.openedByContext,p.menuId=s.defaultMenuItemId,p.disableRebind=!0,u=s.openInContextPane}let m=8;m|=u&&1,await e.get(s.BladeOpener).openBlade(p,{flags:m})}finally{l.completeTrace(r)}}}));