define("MsPortalImpl/UI/Hubs/UI.ResourceMapManager",["require","exports","Fx/ResourceManagement","Fx/DependencyInjection","FxInternal/AsyncLoader","FxHubs/ArmClient","FxHubs/RpcEndPoints","MsPortalImpl/Services/Services.AssetTypes"],(function(e,s,o,t,n,r,a,c){"use strict";Object.defineProperty(s,"__esModule",{value:!0}),s.getResource=s.getResourceAssetInformationForHubs=s.getResourceAssetInformation=s.mapResourceIdToDynamicSelectionAndIcon=s.mapResourceIdToAssetId=s.mapAssetIdToResourceId=s.ResourceMapManager=void 0;var i=MsPortalFx.Base,d=FxImpl.Extension;const u=i.Diagnostics.createLog(e),l="fulfilled";function p(e,s){return{resourceId:e,assetId:null,extensionName:null,assetType:null,compositeDisplayName:null,icon:null,browseType:-1,viewModelLocator:null,viewModel:null,viewModelExtensionName:null,contracts:0,dynamicSelection:null,reason:MsPortalFx.getLogFriendlyMessage(s)}}let m=class{constructor(e){this._assetTypeService=e}_getResourceTypeMappingPacket(e){const s=this._assetTypeService.getAssetTypeByResourceType(e);return s?Q({resourceType:e,assetType:s}):Q({resourceType:e})}_getResourceAssetInformation(e,s){const t=FxImpl.lowerCaseStringMap();e.forEach((e=>{const s=o.ArmId.parse(e,!0).resourceType;let n=t.get(s)||t.get(o.ArmId.parse(e).resourceType);n||(n=[],t.set(s,n)),n.push(e)}));const n=[];return t.forEach(((e,s)=>{n.push(this._getResourceTypeMappingPacket(s))})),Q.allSettled(n).then((e=>{const o=[];e.forEach((e=>{if(e.state===l){const n=e.value,r=n.resourceType.toLowerCase(),a=n.assetType;t.get(r).forEach((e=>{if(a){const t=o=>this._assetTypeService.mapResourceIdToDynamicSelectionAndIcon(e,s).then((s=>{const t=a.assetTypeManifest,{browseType:n}=t;return{resourceId:e,assetId:o,extensionName:a.extension,assetType:t.name,compositeDisplayName:a.compositeDisplayName,icon:s.icon,browseType:void 0!==n?n:-1,viewModelLocator:t.viewModelLocator,viewModel:t.viewModel,viewModelExtensionName:t.viewModelExtensionName,contracts:t.contracts,dynamicSelection:s.selection,isPreview:s.isPreview,isDisabled:t.isDisabled}})).catch((s=>(u.error(s),p(e,s))));o.push(t(e))}else o.push(Q(p(e,new Error("No asset type for resource"))))}))}}));return Q.all(o).finally((()=>{e.forEach((e=>{e.state===l&&e.value.ltm&&e.value.ltm.dispose()}))}))}))}getResourceAssetInformation(e,s){return this._getResourceAssetInformation(e,s)}};m=__decorate([__metadata("fx:diagnostics",[e,"ResourceMapManager"]),t.Class(),__metadata("design:paramtypes",[c.AssetTypeService])],m),s.ResourceMapManager=m,s.mapAssetIdToResourceId=n.defineHandler(d.mapAssetIdToResourceIdEndPoint,(e=>e.diContainer.get(c.AssetTypeService).mapAssetIdToResourceId(e.messageArg))),s.mapResourceIdToAssetId=n.defineHandler(d.mapResourceIdToAssetIdEndPoint,(e=>e.diContainer.get(c.AssetTypeService).mapResourceIdToAssetId(e.messageArg))),s.mapResourceIdToDynamicSelectionAndIcon=n.defineHandler(d.mapResourceIdToDynamicSelectionAndIconEndPoint,(e=>e.diContainer.get(c.AssetTypeService).mapResourceIdToDynamicSelectionAndIcon(e.messageArg.resourceId,`${e.messageContext.srcWindowId}:mapResourceIdToDynamicSelectionAndIcon`).then((e=>Object.assign({},e))))),s.getResourceAssetInformation=n.defineHandler(d.getResourceAssetInformationEndPoint,(e=>e.diContainer.get(m).getResourceAssetInformation(e.messageArg,`${e.messageContext.srcWindowId}:getResourceAssetInformation`).then((e=>e.slice())))),s.getResourceAssetInformationForHubs=n.defineHandler(a.AssetTypes.getResourceAssetInformationEndPoint,(e=>e.diContainer.get(m).getResourceAssetInformation(e.messageArg,`${e.messageContext.srcWindowId}:getResourceAssetInformationForHubs`).then((e=>e.slice())))),s.getResource=n.defineHandler(d.getResourceEndPoint,(e=>(0,r.getResource)(e.messageArg.resourceId,`${e.messageContext.srcWindowId}:getResource`)))}));